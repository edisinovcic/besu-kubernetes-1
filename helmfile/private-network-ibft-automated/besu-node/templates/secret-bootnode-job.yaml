{{- if and .Values.bootnode.enabled  (not .Values.bootnode.privKey) }}
---
apiVersion: batch/v1
kind: Job
metadata:
  name: {{ include "besu-node.fullname" . }}-keys-init
  labels:
    app.kubernetes.io/name: {{ include "besu-node.name" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    helm.sh/chart: {{ include "besu-node.chart" . }}
  annotations:
    helm.sh/hook-weight: "0"
    helm.sh/hook: "pre-install"
    helm.sh/hook-delete-policy: "hook-succeeded"
spec:
  backoffLimit: 3
  completions: 1
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "besu-node.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:
      restartPolicy: "Never"
      containers:
        - name: setup-keys
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          # command: ["/bin/sh", "-c"]
          # args: ["/init/bootnode-key-manager.sh"]
          command:
            - /bin/sh
            - -c
            - |
              apt-get update && apt-get install -y curl
              curl -LO https://storage.googleapis.com/kubernetes-release/release/$(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl && chmod +x ./kubectl
              /opt/besu/bin/besu public-key export --to=public.key
              sed 's/^0x//' ./public.key > enode.key
              ./kubectl create secret generic bootnode-besu-node-keys --namespace {{ .Release.Namespace }} --from-file=private.key=/opt/besu/key --from-file=public.key=./public.key --from-file=enode.key=./enode.key
{{- end }}

{{- if and .Values.bootnode.enabled (not .Values.bootnode.privKey) }}
---
apiVersion: batch/v1
kind: Job
metadata:
  name: {{ include "besu-node.fullname" . }}-keys-cleanup
  labels:
    app.kubernetes.io/name: {{ include "besu-node.name" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    helm.sh/chart: {{ include "besu-node.chart" . }}
  annotations:
    helm.sh/hook-weight: "0"
    helm.sh/hook: "post-delete"
    helm.sh/hook-delete-policy: "hook-succeeded"
spec:
  backoffLimit: 3
  completions: 1
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "besu-node.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:
      restartPolicy: "Never"
      containers:
        - name: setup-keys
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          # command: ["/bin/sh", "-c"]
          # args: ["/init/bootnode-key-manager.sh"]
          command:
            - /bin/sh
            - -c
            - |
              apt-get update && apt-get install -y curl
              curl -LO https://storage.googleapis.com/kubernetes-release/release/$(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl && chmod +x ./kubectl
              ./kubectl delete secret bootnode-besu-node-keys --namespace {{ .Release.Namespace }}
{{- end }}
